<?xml version="1.0"?>

<project name="RedmineJConnector" basedir="." default="dist">

	<property name="name" value="RedmineJConnector" />
	<property name="root" value="." />
	<property name="src.dir" value="src" />
	<property name="test.dir" value="tests" />
	<property name="build.dir" value="build" />
	<property name="dist.dir" value="dist" />
	<property name="test.reports.dir" value="testreports" />
	<property name="lib.dir" value="lib" />
	<property name="javadoc.dir" value="javadocs" />

	<!-- make sure required jars are present -->
	<condition property="runtime-jars-found">
		<available file="${lib.dir}/jibx-run.jar" />
	</condition>
	<condition property="binding-jars-found">
		<and>
			<available file="${lib.dir}/bcel.jar" />
			<available file="${lib.dir}/jibx-bind.jar" />
			<available file="${lib.dir}/jibx-run.jar" />
			<!--available file="${lib.dir}/xmlpull_1_1_4.jar" />
			<available file="${lib.dir}/stax-api.jar" /-->
		</and>
	</condition>
	<available property="extras-jar-found" file="${lib.dir}/lib/jibx-extras.jar" />

	<!-- set classpath for compiling and running application with JiBX -->
	<path id="classpath">
		<fileset dir="${lib.dir}" includes="*.jar" />
		<pathelement location="${basedir}/bin" />
	</path>

	<!-- make sure runtime jars are present -->
	<target name="check-runtime">
		<fail unless="runtime-jars-found">Required JiBX runtime jar jibx-run.jar was not found
			in lib directory (${lib.dir})</fail>
	</target>

	<!-- make sure extras jars are present -->
	<target name="check-extras" depends="check-runtime">
		<fail unless="extras-jar-found">Required JiBX extras jar jibx-extras.jar was not
			found in lib directory (${lib.dir})</fail>
	</target>

	<!-- make sure binding jars are present -->
	<target name="check-binding" depends="check-runtime">
		<fail unless="binding-jars-found">Required JiBX binding jar jibx-bind.jar or bcel.jar
			was not found in lib directory (${lib.dir})</fail>
	</target>

	<!-- clean compiled class files and output file -->
	<target name="clean">
		<delete quiet="true" dir="${build.dir}" />
		<delete quiet="true" file="${basedir}/out.xml" />
		<delete dir="${test.reports.dir}" />
	</target>

	<!-- compile as a separate step -->
	<target name="compile" depends="clean,check-runtime">

		<echo message="Compiling Java source code" />
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="on">
			<classpath refid="classpath" />
		</javac>
		<javac srcdir="${test.dir}" destdir="${build.dir}" debug="on">
			<classpath refid="classpath" />
		</javac>
		<copy todir="${build.dir}">
			<fileset dir="${basedir}/src">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>

	<!-- bind as a separate step -->
	<target name="bind" depends="check-binding">

		<echo message="Running JiBX binding compiler" />
		<taskdef name="bind" classname="org.jibx.binding.ant.CompileTask">
			<classpath>
				<fileset dir="${lib.dir}" includes="*.jar" />
			</classpath>
		</taskdef>
		<!--bind binding="${basedir}/bindings/binding.xml"-->
		<bind binding="${basedir}/binding.xml">
			<classpath refid="classpath" />
		</bind>

	</target>

	<!-- compile and bind -->
	<target name="build" depends="compile, bind" />

	<target name="dist" depends="build">
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
		<echo message="in dist folder" />

		<jar jarfile="${dist.dir}/vts-redmineconnector.jar" compress="true" basedir="${build.dir}" />

	</target>

	<target name="generate-bindings" depends="compile">

		<echo message="Running BindGen tool" />
		<java classpathref="classpath" fork="true" failonerror="true" classname="org.jibx.binding.generator.BindGen">
			<arg value="-s" />
			<arg value="src" />
			<arg value="-t" />
			<arg value="bindings" />
			<arg value="-n" />
			<arg value="uri=http://www.vedantatree.com/redminejconnector" />
			<arg value="-v" />
			<arg value="-w" />
			<arg value="com.vedantatree.redmineconnector.bdo.Status" />
			<arg value="com.vedantatree.redmineconnector.bdo.Tracker" />
			<arg value="com.vedantatree.redmineconnector.bdo.Priority" />
			<arg value="com.vedantatree.redmineconnector.bdo.Error" />
			<arg value="com.vedantatree.redmineconnector.bdo.ErrorsContainer" />
			<arg value="com.vedantatree.redmineconnector.bdo.User" />
			<arg value="com.vedantatree.redmineconnector.bdo.UsersContainer" />
			<arg value="com.vedantatree.redmineconnector.bdo.UserGroup" />
			<arg value="com.vedantatree.redmineconnector.bdo.UserRole" />
			<arg value="com.vedantatree.redmineconnector.bdo.Project" />
			<arg value="com.vedantatree.redmineconnector.bdo.ProjectsContainer" />
			<arg value="com.vedantatree.redmineconnector.bdo.Issue" />
			<arg value="com.vedantatree.redmineconnector.bdo.IssuesContainer" />
			<arg value="com.vedantatree.redmineconnector.bdo.ProjectMembership" />
		</java>

	</target>

	<!-- test binding with jibx-extras roundtripping tool -->
	<target name="roundtrip" depends="check-extras">
		<echo message="Roundtripping the document using binding..." />
		<java classname="org.jibx.extras.TestRoundtrip" fork="true" failonerror="true">
			<classpath refid="classpath" />
			<arg value="org.jibx.starter.Customer" />
			<arg value="${basedir}/data.xml" />
		</java>
		<echo message="Roundtrip test successful" />
	</target>

	<!--
		run the included test program to read and then write to separate file
	-->
	<target name="run" depends="check-runtime">
		<echo message="Running the sample application..." />
		<java classname="org.jibx.starter.Test" fork="true" failonerror="true">
			<classpath refid="classpath" />
			<arg value="${basedir}/data.xml" />
			<arg value="${basedir}/out.xml" />
		</java>
		<echo message="Generated output document out.xml" />
	</target>

	<target name="javadoc" description="Generates RedmineJConnector Javadocs" depends="build">
		<echo message="in javadoc" />
		<echo message="${javadoc.dir}" />
		<delete dir="${javadoc.dir}" failonerror="false" />
		<mkdir dir="${javadoc.dir}" />

		<javadoc packagenames="com.vedantatree.*" sourcepath="${src.dir}" destdir="${javadoc.dir}" windowtitle="RedmineJConnector" source="1.6" access="protected" author="true" version="true" use="true" defaultexcludes="true" header='&lt;a href=\"http://www.vedantatree.com/\" target=\"_top\"&gt;RedmineJConnector&lt;/a&gt;'>
			<arg value="-breakiterator" />
			<arg value="-J-Xmx128m" />
			<arg value="-J-XX:MaxPermSize=128m" />
			<classpath refid="classpath" />
			<doctitle>
				<![CDATA[<h1>RedmineJConnector</h1>]]></doctitle>
		<bottom>
			<![CDATA[<i>Copyright &#169; 2011 VedantaTree Organization. All Rights Reserved.</i>]]></bottom>

	<link href="http://java.sun.com/j2ee/1.4/docs/api" />
	<link href="http://www.junit.org/junit/javadoc/" />
	<link href="http://logging.apache.org/log4j/docs/api/" />
	<link href="http://jibx.sourceforge.net/" />
</javadoc>

</target>

<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
<classpath>
	<pathelement path="${antclasspath}" />
</classpath>
</taskdef>

<taskdef name="junitreport" classname="org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator">
<classpath>
	<pathelement path="${antclasspath}" />
</classpath>
</taskdef>

<!-- Running test cases -->
<target name="run-tests" description="Run tests and generate test summary" depends="dist">

<mkdir dir="${test.reports.dir}" />
<!--
	dir="${root}" 
	-->
<junit printsummary="yes" haltonfailure="no" haltonerror="no">
	<jvmarg line="-Djava.awt.headless=true" />
	<jvmarg line="-XX:MaxPermSize=96m" />

	<classpath refid="classpath" />
	<!--classpath location="${test.dir}/com/vedantatree/redmineconnector/test" /-->

	<formatter type="plain" usefile="false" />
	<formatter type="xml" />
	<!--test name="com.vedantatree.redmineconnector.test.RCTestCase" /-->

	<batchtest fork="yes" todir="${test.reports.dir}">
		<fileset dir="${test.dir}">
			<include name="**/*TestCase*.java" />
		</fileset>
	</batchtest>
</junit>
<junitreport todir="${test.reports.dir}">
	<fileset dir="${test.reports.dir}">
		<include name="TEST-*.xml" />
	</fileset>
	<report todir="${test.reports.dir}" />
</junitreport>
</target>


<!-- show list of targets -->
<target name="help">
<echo message="Targets are:" />
<echo />
<echo message="clean      delete all class files and generated code" />
<echo message="compile    compile class files as a separate step" />
<echo message="bind       compile JiBX bindings as a separate step" />
<echo message="build      compile classes and JiBX binding" />
<echo message="roundtrip  test binding with jibx-extras roundtripping tool" />
<echo message="run        run the test application" />
</target>

</project>
